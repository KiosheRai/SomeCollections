@model SomeCollections.Models.Item
@{
    ViewData["Title"] = $"{@Model.Collection.Name}";
}
<div class="container vh-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-lg-12 col-xl-11">
            <div class="card text-center">
                <div class="card-header text-white h1 bg-primary">
                    @Model.Name
                </div>
                <div class="card-body">
                    @if (Model.ImgPath != null)
                    {
                        <div class="border border-success rounded-3">
                            <img class="img-fluid" style='max-height: 320px' src="@Url.Content(Model.ImgPath)" />
                        </div>
                    }
                    <h4 class="card-title text-muted">Автор: @Model.Owner.UserName</h4>
                    <p class="card-text">@Model.Description</p>
                    <a class="btn btn-outline-primary" asp-route-Id="@Model.Collection.Id" asp-action="Index">Назад</a>
                </div>
                <div class="card-footer text-muted bg-primary">
                    <h5 class="card-subtitle mb-1 text-muted text-right">
                        <button id="likebtn" class="btn btn-outline-info">
                            <img src="~/pic/LikeButton.webp" height="20" width="20" alt="Like" />
                        </button>
                        <span id="countLikes" class="text-white" style="font-size: 1.2em">@Model.LikeCount</span>
                    </h5>
                </div>
            </div>

            <h5 class="text-center border-bottom m-3">Комментарии</h5>


            <div class="form-outline w-100">
                <textarea class="form-control" maxlength="120" placeholder="Оставить комментаий" id="commentText"></textarea>
                <button type="button" class="m-3 btn btn-outline-info" id="commentBtn">Отправить</button>
            </div>

            <div id="comments">
                @foreach (Message comment in ViewBag.Comments)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex flex-start">
                                <div class="w-100">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h6 class="text-primary fw-bold mb-0">
                                            @comment.Sender.UserName <span class="text-dark ms-2">@comment.Text</span>
                                        </h6>
                                        <p class="mb-0">@comment.Time.ToString()</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/Post")
        .build();

    hubConnection.on('getLike', function (data) {
        var counts = document.getElementById("countLikes");
        counts.textContent = data;
    });

    document.getElementById("likebtn").addEventListener("click", function (e) {
        let itemId = "@Model.Id";
        let userName="@User.Identity.Name";
        hubConnection.invoke("Like", itemId, userName);
    });

    document.getElementById("commentbtn").addEventListener("click", function (e) {
        let itemId = "@Model.Id";
        let userName = "@User.Identity.Name";
        let text = document.getElementById("commentText").value;
        hubConnection.invoke("SendComment", itemId, name, text);
    });

    hubConnection.start();
</script>




