@model SomeCollections.Models.Item
@{
    ViewData["Title"] = $"{@Model.Collection.Name}";
}
<div>
    <div class="container">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-center">
                    <div class="card-header text-white h1 bg-primary">
                        @Model.Name
                    </div>
                    <div class="card-body">
                        @if (Model.ImgPath != null)
                        {
                            <div>
                                <img class="img-fluid" style='max-height: 320px' src="@Url.Content(Model.ImgPath)" />
                            </div>
                        }
                        <h4 class="card-title text-muted">@Localizer["Author"]: @Model.Owner.UserName</h4>
                        <p class="card-text">@Model.Description</p>
                        <a class="btn btn-outline-primary" asp-route-Id="@Model.Collection.Id" asp-action="Index">@Localizer["btnBack"]</a>
                    </div>
                    <div class="card-footer text-muted bg-primary">
                        <h5 class="card-subtitle mb-1 text-muted text-right">
                            <button id="likebtn" class="btn btn-primary-info">
                                <img src="~/pic/LikeButton.webp" height="20" width="20" alt="Like" />
                            </button>
                            <span id="countLikes" class="text-white" style="font-size: 1.2em">@Model.LikeCount</span>
                        </h5>
                    </div>
                </div>

                <h5 class="text-center border-bottom m-3">@Localizer["Comments"]</h5>

                @if (User.Identity.IsAuthenticated)
                {
                    <div class="form-outline w-100">
                        <textarea class="form-control" style="resize: none" maxlength="120" placeholder="@Localizer["PlaceHolderComm"]" id="commentText"></textarea>
                        <button type="button" class="m-3 btn btn-outline-info" id="commentBtn">@Localizer["Send"]</button>
                    </div>
                }

                <div id="comments">
                    @foreach (Message comment in ViewBag.Comments)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex flex-start">
                                    <div class="w-100">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <h6 class="text-primary fw-bold mb-0">
                                                @comment.Sender.UserName<span class="text-dark ms-2 ml-2">@comment.Text</span>
                                            </h6>
                                            <p class="mb-0">@comment.Time.ToString()</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/Post")
        .build();

    hubConnection.on('getLike', function (data) {
        var counts = document.getElementById("countLikes");
        counts.textContent = data;
    });

    hubConnection.on('getComment', function (name, text, time) {
        let comment = document.getElementById('comments')

        let div = document.createElement("div")
        div.setAttribute("class", "card mb-3")
        let div1 = document.createElement("div")
        div1.setAttribute("class", "card-body")
        let div2 = document.createElement("div")
        div2.setAttribute("class", "d-flex flex-start")
        let div3 = document.createElement("div")
        div3.setAttribute("class", "w-100")
        let div4 = document.createElement("div")
        div4.setAttribute("class", "d-flex justify-content-between align-items-center mb-3")
        let h = document.createElement("h6")
        h.setAttribute("class", "text-primary fw-bold mb-0")
        let span = document.createElement("span")
        span.setAttribute("class", "text-dark ms-2 ml-2")
        let p = document.createElement("p")
        p.setAttribute("class", "mb-0")
        p.innerText = time
        span.innerHTML = text
        h.innerHTML = name
        h.appendChild(span)
        div4.appendChild(h)
        div4.appendChild(p)
        div3.appendChild(div4)
        div2.appendChild(div3)
        div1.appendChild(div2)
        div.appendChild(div1)
        comment.appendChild(div)
    });

    document.getElementById("likebtn").addEventListener("click", function (e) {
        let itemId = "@Model.Id";
        let userName = "@User.Identity.Name";
        hubConnection.invoke("Like", itemId, userName);
    });

    document.getElementById("commentBtn").addEventListener("click", function (e) {
        let itemId = "@Model.Id";
        let userName = "@User.Identity.Name";
        let text = document.getElementById("commentText").value;
        document.getElementById("commentText").value = ""
        hubConnection.invoke("SendComment", itemId, userName, text);
    });

    hubConnection.start();
</script>